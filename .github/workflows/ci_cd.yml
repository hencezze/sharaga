name: CI/CD

on:
  push:
    branches: [ "main" ]
    paths: 
      - main.py

jobs:
  prerequisites:
    runs-on: [self-hosted, Linux]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11' # install the python version needed
            
      - name: Install dependencies 
        run: pip3 install pylint 
        
      - name: Execute lint script
        run: python3 lint.py >> linted.txt
        
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: python-script
          path: linted.txt
          
  build:
    runs-on: [self-hosted, Linux]
    needs: [prerequisites]
    steps:
      - name: Execing main.py
        run: echo ${{ github.event.head_commit.message }} | python3 main.py | awk '{ print "<h1><strong>" $0 "</strong></h1>" }' > index.html
        
      - name: add lint info
        run: awk '{ print "<p>" $0 "</p>" }' linted.txt >> index.html
             
  deploy:
    runs-on: [self-hosted, Linux]
    needs: [prerequisites, build]
    steps:
    
      - name: Docker build
        run: docker build -t devimage:${{ github.run_id }} .
        
      - name: Blue/green deploy
        run: docker run -itd -p 9927:8080 --name bluegreendp devimage:${{ github.run_id }}
      
      - name: Docker new version simple test
        run: if [[ $(curl -o /dev/null -s -w "%{http_code}\n" http://localhost:9927) -eq '201' ]]; then break; fi && docker rm -f bluegreendp
        
      - name: Blue/green deploy finish
        run: docker rm -f prod && docker run -itd -p 8080:8080 --name prod devimage:${{ github.run_id }}

  notification:
    runs-on: [self-hosted, Linux]
    needs: [prerequisites, build, deploy]
    steps:
      - name: Send Notification
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |  #https://help.github.com/en/actions/reference/contexts-and-expression-syntax-for-github-actions#github-context
            Build ${{ github.run_id }} succesfully deployed. Image name devimage:${{ github.run_id }}. Python env is: ${{ github.event.head_commit.message }}
            Author:"${{ github.actor }}" triggered by ${{ github.event_name }} in ${{ github.repository }}
        
